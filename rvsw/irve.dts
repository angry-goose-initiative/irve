/**
 * File:    irve.dts
 * Brief:   The IRVE Device Tree for the Linux kernel
 * 
 * Copyright (C) 2023 John Jekel and Nick Chan
 * See the LICENSE file at the root of the project for licensing info.
 * 
 * AFTER COMPILING THIS with `dtc`, IT IS IMPERATIVE IT IS PLACED IN MEMORY AT
 * A LOCATION ALIGNED TO 8 BYTES. THIS TOOK ME FOREVER TO FIGURE OUT. DON'T BE ME.
 *
 * Compile with `dtc ./irve.dts -o ./irve.dtb`
 *
 * Partialy based on https://github.com/cnlohr/mini-rv32ima/blob/master/configs/minimal.dts
 * Also useful: https://github.com/riscv-non-isa/riscv-device-tree-doc/blob/master/bindings/riscv/cpus.txt
 * https://github.com/westerndigitalcorporation/RISC-V-Linux/blob/master/linux/Documentation/devicetree/bindings/interrupt-controller/riscv%2Ccpu-intc.txt
 *
*/

/dts-v1/;

/ {
    #address-cells = <1>;
    #size-cells = <1>;

    memory@C0000000 {
        device_type = "memory";
        reg = <0xC0000000 0x3ffffff>;
    };

    cpus {
        #address-cells = <0x01>;
        #size-cells = <0x00>;
        timebase-frequency = <1000>;//mtime ticks at 1kHz

        cpu@0 {
            /* phandle = <0x01>; */
            device_type = "cpu";
            reg = <0x00000000>;/* mhartid is 0 */
            status = "okay";/* The CPU begins online */
            compatible = "riscv";
            riscv,isa = "rv32ima";/* TODO do we need to specify zicsr, zifencei, etc as well? */
            mmu-type = "riscv,sv32";

            /* The "Hart Level Interrupt Controller" (aka the built-in CPU interrupt controller with 3 sources) */
            interrupt-controller {
                #interrupt-cells = <0x01>;
                interrupt-controller;
                compatible = "riscv,cpu-intc";
                /* phandle = <0x02>; */
            };
        };

        /* cpu-map {
            cluster0 {
                core0 {
                    cpu = <0x01>;
                };
            };
        };
        */
    };

    /* TODO add other things we may need */
};
